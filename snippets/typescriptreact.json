{
  "functional-component": {
    "prefix": "tsxfc",
    "description": "React pure functional component",
    "body": [
      "import React, { FunctionComponent } from 'react'",
      "",
      "interface ${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}}Props {}",
      "export const ${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}}: FunctionComponent<${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}}Props> = props => {",
      "",
      "  return (",
      "    <></>",
      "  )",
      "}"
    ]
  },
  "functional-component-light": {
    "prefix": "tsxfcl",
    "description": "React pure functional component, no import/export",
    "body": [
      "interface ${1:Component}Props {}",
      "const ${1:Component}: FunctionComponent<${1:Component}Props> = props => {",
      "",
      "  return (",
      "    <></>",
      "  )",
      "}"
    ]
  },
  "class-component": {
    "prefix": "tsxcc",
    "description": "React class component",
    "body": [
      "import React from 'react'",
      "",
      "interface ${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}}Props {}",
      "interface ${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}}State {}",
      "export class ${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}} extends React.PureComponent<${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}}Props, ${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}}State> {",
      "  constructor(props: ${1:${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}$2/}}Props) {",
      "    super(props);",
      "    this.state = {};",
      "  }",
      "",
      "  render() {",
      "    return (",
      "      <></>",
      "    )",
      "  }",
      "}"
    ]
  },
  "class-component-light": {
    "prefix": "tsxccl",
    "description": "React class component, no import/exports",
    "body": [
      "interface ${1:Component}Props {}",
      "interface ${1:Component}State {}",
      "class ${1:Component} extends React.PureComponent<${1:Component}Props, ${1:Component}State> {",
      "  constructor(props: ${1:Component}Props) {",
      "    super(props);",
      "    this.state = {};",
      "  }",
      "",
      "  render() {",
      "    return (",
      "      <></>",
      "    )",
      "  }",
      "}"
    ]
  }
}
